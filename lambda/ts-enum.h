// Generated by update_ts_enum.sh from lambda/tree-sitter-lambda/src/parser.c
#pragma once

enum ts_symbol_identifiers {
  sym_identifier = 1,
  aux_sym_content_token1 = 2,
  anon_sym_SEMI = 3,
  anon_sym_LPAREN = 4,
  anon_sym_COMMA = 5,
  anon_sym_RPAREN = 6,
  anon_sym_COLON = 7,
  anon_sym_LBRACE = 8,
  anon_sym_RBRACE = 9,
  anon_sym_LBRACK = 10,
  anon_sym_RBRACK = 11,
  anon_sym_LT = 12,
  anon_sym_GT = 13,
  anon_sym_DQUOTE = 14,
  sym_string_content = 15,
  anon_sym_SQUOTE = 16,
  sym_symbol_content = 17,
  sym_escape_sequence = 18,
  anon_sym_b_SQUOTE = 19,
  aux_sym_binary_token1 = 20,
  sym_hex_binary = 21,
  sym_base64_binary = 22,
  sym_float = 23,
  sym_integer = 24,
  sym_time = 25,
  sym_datetime = 26,
  anon_sym_t_SQUOTE = 27,
  sym_index = 28,
  sym_true = 29,
  sym_false = 30,
  anon_sym_null = 31,
  sym_comment = 32,
  sym_import = 33,
  anon_sym_DOT_DOT_DOT = 34,
  anon_sym_DOT = 35,
  anon_sym_and = 36,
  anon_sym_or = 37,
  anon_sym_PLUS = 38,
  anon_sym_DASH = 39,
  anon_sym_STAR = 40,
  anon_sym_SLASH = 41,
  anon_sym__SLASH = 42,
  anon_sym_PERCENT = 43,
  anon_sym_STAR_STAR = 44,
  anon_sym_EQ_EQ = 45,
  anon_sym_BANG_EQ = 46,
  anon_sym_LT_EQ = 47,
  anon_sym_GT_EQ = 48,
  anon_sym_to = 49,
  anon_sym_in = 50,
  anon_sym_not = 51,
  anon_sym_fn = 52,
  anon_sym_any = 53,
  anon_sym_error = 54,
  anon_sym_boolean = 55,
  anon_sym_int = 56,
  anon_sym_float = 57,
  anon_sym_decimal = 58,
  anon_sym_number = 59,
  anon_sym_date = 60,
  anon_sym_time = 61,
  anon_sym_datetime = 62,
  anon_sym_symbol = 63,
  anon_sym_string = 64,
  anon_sym_binary = 65,
  anon_sym_list = 66,
  anon_sym_array = 67,
  anon_sym_map = 68,
  anon_sym_element = 69,
  anon_sym_object = 70,
  anon_sym_type = 71,
  anon_sym_function = 72,
  anon_sym_QMARK = 73,
  anon_sym_PIPE = 74,
  anon_sym_AMP = 75,
  anon_sym_BANG = 76,
  anon_sym_CARET = 77,
  anon_sym_EQ = 78,
  anon_sym_let = 79,
  anon_sym_if = 80,
  anon_sym_else = 81,
  anon_sym_for = 82,
  sym_document = 83,
  sym_content = 84,
  sym_list = 85,
  sym_pair = 86,
  sym_map = 87,
  sym_array = 88,
  sym_attr = 89,
  sym_attrs = 90,
  sym_element = 91,
  sym_string = 92,
  aux_sym__string_content = 93,
  sym_symbol = 94,
  aux_sym__symbol_content = 95,
  sym_binary = 96,
  sym_null = 97,
  sym__expression = 98,
  sym_primary_expr = 99,
  sym_spread_element = 100,
  sym_call_expr = 101,
  sym_subscript_expr = 102,
  sym_member_expr = 103,
  sym_binary_expr = 104,
  sym_unary_expr = 105,
  sym_parameter = 106,
  sym_fn_definition = 107,
  sym_built_in_type = 108,
  sym_occurrence = 109,
  sym_map_item_type = 110,
  sym_map_type = 111,
  sym_primary_type = 112,
  sym_binary_type = 113,
  sym_type_annotation = 114,
  sym_assign_expr = 115,
  sym_let_stam = 116,
  sym_if_expr = 117,
  sym_if_stam = 118,
  sym_loop_expr = 119,
  sym_for_expr = 120,
  sym_for_stam = 121,
  aux_sym_document_repeat1 = 122,
  aux_sym_content_repeat1 = 123,
  aux_sym_list_repeat1 = 124,
  aux_sym_map_repeat1 = 125,
  aux_sym_array_repeat1 = 126,
  aux_sym_attrs_repeat1 = 127,
  aux_sym__arguments_repeat1 = 128,
  aux_sym_fn_definition_repeat1 = 129,
  aux_sym_map_type_repeat1 = 130,
  aux_sym_let_stam_repeat1 = 131,
  aux_sym_for_expr_repeat1 = 132,
};

enum ts_field_identifiers {
  field_argument = 1,
  field_as = 2,
  field_body = 3,
  field_cond = 4,
  field_declare = 5,
  field_else = 6,
  field_expr = 7,
  field_field = 8,
  field_function = 9,
  field_key = 10,
  field_left = 11,
  field_name = 12,
  field_object = 13,
  field_operator = 14,
  field_right = 15,
  field_then = 16,
  field_type = 17,
  field_value = 18,
};

