h1. Comprehensive Textile Test Document

This document tests all supported Textile markup features in the unified parser.

h2. Headings

h1. Heading Level 1
h2. Heading Level 2  
h3. Heading Level 3
h4. Heading Level 4
h5. Heading Level 5
h6. Heading Level 6

h2. Text Formatting

This paragraph demonstrates *strong text* and _emphasis text_.

Double markers: **bold text** and __italic text__.

Code spans: @inline code@ and @variable_name@.

Superscript: E=mc^2^ and H~2~O demonstrates subscript.

h2. Lists

h3. Bulleted Lists

* First item
* Second item
* Third item
** Nested item
** Another nested item
* Back to main level

h3. Numbered Lists

# First numbered item
# Second numbered item
# Third numbered item
## Nested numbered item
## Another nested item
# Back to main level

h3. Definition Lists

- Term 1 := Definition for term 1
- Term 2 := Definition for term 2 with more content
- Complex Term := A definition that spans multiple words and explains something in detail

h2. Code Blocks

h3. Basic Code Block

bc. function hello() {
    return "Hello, World!";
}

h3. Extended Code Block

bc.. This is an extended code block
that can span multiple lines
without needing special markers.

It continues until another block element is encountered.
console.log("JavaScript code");
let x = 42;

p. This paragraph ends the code block.

h2. Block Quotes

h3. Basic Block Quote

bq. This is a simple block quote that demonstrates quoted text.

h3. Extended Block Quote

bq.. This is an extended block quote
that can span multiple lines.

It continues until another block element.
"Quote within a quote" - Author

p. This paragraph ends the block quote.

h2. Pre-formatted Text

pre. This is pre-formatted text
    with preserved spacing
        and indentation
var code = "example";

h2. Comments

###. This is a Textile comment that should not appear in the output

p. Regular paragraph after comment.

h2. No-textile Blocks

h3. Basic No-textile

notextile. This <em>HTML</em> will not be processed as Textile markup.

h3. Extended No-textile

notextile.. This is an extended no-textile block.
<strong>HTML tags</strong> are preserved.
*Textile markup* is ignored here.

p. Back to normal Textile processing.

h2. Textile Modifiers

h3. CSS Classes and Styles

p(highlight). This paragraph has a CSS class.

p{color: red}. This paragraph has inline styles.

p[en]. This paragraph has a language attribute.

h1<. Left-aligned heading

h1>. Right-aligned heading

h1=. Center-aligned heading

h2. Mixed Content Paragraph

This paragraph contains *strong text*, _emphasized text_, @code spans@, 
superscript^text^, subscript~text~, and regular text all mixed together.

h2. Complex Nested Formatting

This paragraph has *strong text with _nested emphasis_ inside* and 
@code with *bold inside*@ to test parser robustness.

h2. Special Characters

Testing special characters: & < > " ' and unicode: café, naïve, résumé.

h2. Whitespace and Line Breaks

This paragraph tests
line breaks within paragraphs.

This is a separate paragraph with proper spacing.


This paragraph has multiple blank lines before it.

h2. Edge Cases

h3. Empty Elements

p. 

p. Regular paragraph after empty one.

h3. Minimal Content

h1. A
p. B
* C

h3. Special Character Edge Cases

* Item with @@ double at-signs
* Item with ** double asterisks  
* Item with __ double underscores
* Item with ^^ double carets
* Item with ~~ double tildes

h2. Tables

h3. Basic Table

|_. Header 1 |_. Header 2 |_. Header 3 |
| Cell 1.1 | Cell 1.2 | Cell 1.3 |
| Cell 2.1 | Cell 2.2 | Cell 2.3 |

h3. Table with Alignment

|_<. Left Header |_=. Center Header |_>. Right Header |
|<. Left aligned | =. Center aligned | >. Right aligned |
| Normal cell | Another cell | Last cell |

h3. Complex Table

|_. Name |_. Age |_. Occupation |_. Location |
| Alice | 30 | Engineer | New York |
| Bob | 25 | Designer | California |
| Charlie | 35 | Manager | Texas |
| Diana | 28 | Developer | Florida |

h2. Final Test Section

This concludes the comprehensive Textile test document. It covers:

* All heading levels (h1-h6)
* Text formatting (strong, emphasis, code, superscript, subscript)
* All list types (bulleted, numbered, definition)
* Code blocks (basic and extended)
* Block quotes (basic and extended)  
* Pre-formatted text
* Comments
* No-textile blocks
* Tables (basic, with alignment, and complex layouts)
* Textile modifiers (classes, styles, alignment, language)
* Mixed and nested formatting
* Special characters and edge cases
* Various whitespace scenarios

The unified parser should handle all of these Textile features correctly.
