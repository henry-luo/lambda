"# Fixed for expressions with arrays"
2
4
6
"a!b!c!"
0
2
0
4
0
"# Fixed for expressions with ranges"
1
4
9
16
25
10
11
12
13
"# For statements with arrays"
8
10
12
6
7
8
9
10
11
12
13
14
15
"# Let expressions with scalar types"
43
6.28
false
"hello world"
'test'
t'2025-01-01'
b'\xDEADBEEF'
'# Let statements with scalar types'
'# Let expressions with arrays'
2
2
3
'# Let statements with arrays'
'# Let expressions with maps'
3
"Alice"
42
"# Let statements with maps"
1
2
3
"# Simple if expressions"
'yes'
42
'default'
"# Nested if expressions"
42
"# If expressions with let"
'big'
'B'
"# Nested if expressions"
2
'medium'
"# If statements"
'a is greater than 40'
"hello world"
'user:'
"Bob is active"
'# For expressions with arrays'
2
4
6
"a!b!c!"
0
2
0
4
0
"# For expressions with ranges"
1
4
9
16
25
10
11
12
13
"# For statements with arrays"
42
"hello"
3.14
true
[1, 2]
1
2
3
40
50
"# For statements with ranges"
3
5
7
9
11
13
15
17
19
21
1
3
5
7
9
"# Let with if expression inside"
0
2
0
4
0
'# If expression with let expressions in branches'
"warm weather"
'# For expression with if expressions'
1
2
"fizz"
4
"buzzfizz"
7
8
"fizzbuzz"
'# Nested let expressions'
95
"# Complex nested statements"
1
20
3
40
5
60
7
80
9
"# Let statement with complex initialization"
{
  numbers_squared: (1, 4, 9, 16, 25),
  strings_doubled: "aabbcc",
  conditions: (false, false, true, true)
}
"# If statement with for expressions in branches"
101
102
103
104
105
"# Let with different types in sequence"
[42, 3.14, "test", true]
"# If expressions returning different types (should unify)"
42
"# For with different collection types"
1
"two"
3
true
false
123
"=== EDGE CASES AND ERROR CONDITIONS ==="
'# Empty collections'
'# Null handling'
"is null"
1
"empty"
3
'# Zero and negative numbers'
'truthy'
'not positive'
-2
-1
"zero"
1
2
"# Very nested expressions"
11
12
13
14
"# Mixed statement and expression patterns"
201
202
203
204
205
"# Final complex example combining everything"
{
  result: 1,
  status: "low"
}
{
  result: 4,
  status: "low"
}
{
  result: 90,
  status: "high"
}
