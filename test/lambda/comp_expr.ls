// Comprehensive comparison operations test - all comparison operators with various types

"===== COMPREHENSIVE COMPARISON OPERATIONS TEST ====="

"Basic Equality Comparisons (==):"
"1."; (5 == 5)
"2."; (5 == 3)
"3."; (3.14 == 3.14)
"4."; (3.14 == 2.71)
"5."; (5 == 5.0)
"6."; (5.0 == 5)
"7."; (-5 == -5)
"8."; (0 == 0)
"9."; (0.0 == 0.0)
"10."; (-0.0 == 0.0)

"Basic Inequality Comparisons (!=):"
"11."; (5 != 3)
"12."; (5 != 5)
"13."; (3.14 != 2.71)
"14."; (3.14 != 3.14)
"15."; (5 != 5.1)
"16."; (5.0 != 5)
"17."; (-5 != -3)
"18."; (0 != 1)
"19."; (0.0 != 0.1)

"Less Than Comparisons (<):"
"20."; (3 < 5)
"21."; (5 < 3)
"22."; (5 < 5)
"23."; (3.14 < 3.15)
"24."; (3.15 < 3.14)
"25."; (3.0 < 3.0)
"26."; (-5 < -3)
"27."; (-3 < -5)
"28."; (0 < 1)
"29."; (-1 < 0)
"30."; (5 < 5.1)
"31."; (5.1 < 5)

"Greater Than Comparisons (>):"
"32."; (5 > 3)
"33."; (3 > 5)
"34."; (5 > 5)
"35."; (3.15 > 3.14)
"36."; (3.14 > 3.15)
"37."; (3.0 > 3.0)
"38."; (-3 > -5)
"39."; (-5 > -3)
"40."; (1 > 0)
"41."; (0 > -1)
"42."; (5.1 > 5)
"43."; (5 > 5.1)

"Less Than or Equal Comparisons (<=):"
"44."; (3 <= 5)
"45."; (5 <= 3)
"46."; (5 <= 5)
"47."; (3.14 <= 3.15)
"48."; (3.15 <= 3.14)
"49."; (3.14 <= 3.14)
"50."; (-5 <= -3)
"51."; (-3 <= -5)
"52."; (-5 <= -5)
"53."; (0 <= 1)
"54."; (-1 <= 0)
"55."; (0 <= 0)
"56."; (5 <= 5.1)
"57."; (5.1 <= 5)
"58."; (5.0 <= 5)

"Greater Than or Equal Comparisons (>=):"
"59."; (5 >= 3)
"60."; (3 >= 5)
"61."; (5 >= 5)
"62."; (3.15 >= 3.14)
"63."; (3.14 >= 3.15)
"64."; (3.14 >= 3.14)
"65."; (-3 >= -5)
"66."; (-5 >= -3)
"67."; (-5 >= -5)
"68."; (1 >= 0)
"69."; (0 >= -1)
"70."; (0 >= 0)
"71."; (5.1 >= 5)
"72."; (5 >= 5.1)
"73."; (5 >= 5.0)

"Logical NOT Operations (not):"
"74."; not true
"75."; not false
"76."; not (5 == 5)
"77."; not (5 == 3)
"78."; not (3 < 5)
"79."; not (5 < 3)
"80."; not (5 <= 5)
"81."; not (5 > 3)

"Logical AND Operations (and):"
"82."; (true and true)
"83."; (true and false)
"84."; (false and true)
"85."; (false and false)
"86."; ((5 == 5) and (3 < 7))
"87."; ((5 == 3) and (3 < 7))
"88."; ((5 != 3) and (7 > 2))
"89."; ((5 > 3) and (5 <= 5))
"90."; ((3 < 5) and (10 >= 10))
"91."; (not (5 == 3) and (7 > 2))

"Logical OR Operations (or):"
"92."; (true or true)
"93."; (true or false)
"94."; (false or true)
"95."; (false or false)
"96."; ((5 == 5) or (3 > 7))
"97."; ((5 == 3) or (3 < 7))
"98."; ((5 != 3) or (7 < 2))
"99."; ((5 < 3) or (5 >= 5))
"100."; ((3 > 5) or (10 <= 10))
"101."; (not (5 == 5) or (7 > 2))

"Mixed Boolean Logic:"
"102."; (true and (false or true))
"103."; (false or (true and false))
"104."; ((true or false) and (true or false))
"105."; (not (false and true) or (false or true))
"106."; ((5 == 5) and ((3 < 7) or (10 > 5)))
"107."; ((5 != 5) or ((3 >= 7) and (10 <= 5)))

"Logical Operations with Mixed Types:"
"108."; (5 and true)
"109."; (0 and true)
"110."; (true and 5)
"111."; (true and 0)
"112."; (5 or false)
"113."; (0 or false)
"114."; (false or 5)
"115."; (false or 0)

"Large Number Comparisons:"
"116."; (999999999 == 999999999)
"117."; (999999999 != 999999998)
"118."; (999999999 > 999999998)
"119."; (999999998 < 999999999)
"120."; (1000000000 >= 1000000000)
"121."; (1000000000 <= 1000000000)

"Negative Number Comparisons:"
"122."; (-999 == -999)
"123."; (-999 != -998)
"124."; (-999 < -998)
"125."; (-998 > -999)
"126."; (-1000 <= -999)
"127."; (-999 >= -1000)

"Zero Comparisons:"
"128."; (0 == 0)
"129."; (0 != 1)
"130."; (0 < 1)
"131."; (1 > 0)
"132."; (0 <= 0)
"133."; (0 >= 0)
"134."; (-0 == 0)
"135."; (0.0 == 0)
"136."; (0 == 0.0)

"Mixed Type Comparisons:"
"137."; (5 == 5.0)
"138."; (5.0 == 5)
"139."; (5 != 5.1)
"140."; (5.1 != 5)
"141."; (5 < 5.1)
"142."; (5.1 > 5)
"143."; (5 <= 5.0)
"144."; (5.0 >= 5)

"Complex Boolean Expressions:"
"145."; ((5 == 5) and (3 < 7))
"146."; ((5 != 3) or (10 < 5))
"147."; (not (5 == 3) and (7 > 2))
"148."; ((5 > 3) and not (2 > 5))
"149."; (((5 == 5) and (3 < 7)) or (10 != 10))

"Nested Comparisons:"
"150."; (5 < 10) == (3 < 7)
"151."; (5 > 10) != (3 < 7)
"152."; (5 <= 5) == (10 >= 10)
"153."; not ((5 < 3) or (10 > 20))

"End of Comparison Expression Tests."