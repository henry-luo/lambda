# Makefile for C++ HashMap wrapper
CXX = g++
CXXFLAGS = -std=c++23 -Wall -Wextra -O2 -I./lib
CC = gcc
CFLAGS = -std=c99 -Wall -Wextra -O2

# Source files
HASHMAP_C = lib/hashmap.c
TEST_CPP = test/test_hashmap.cpp
EXAMPLE_CPP = test/example_hashmap.cpp

# Object files
HASHMAP_O = build/hashmap.o
TEST_O = build/test_hashmap.o
EXAMPLE_O = build/example_hashmap.o

# Executables
TEST_EXEC = test_hashmap
EXAMPLE_EXEC = example_hashmap

.PHONY: all clean test example

all: $(TEST_EXEC) $(EXAMPLE_EXEC)

# Create build directory
build:
	mkdir -p build

# Compile C hashmap
$(HASHMAP_O): $(HASHMAP_C) | build
	$(CC) $(CFLAGS) -c $< -o $@

# Compile C++ test
$(TEST_O): $(TEST_CPP) lib/hashmap.hpp lib/hashmap.h | build
	$(CXX) $(CXXFLAGS) -c $< -o $@

# Compile C++ example
$(EXAMPLE_O): $(EXAMPLE_CPP) lib/hashmap.hpp lib/hashmap.h | build
	$(CXX) $(CXXFLAGS) -c $< -o $@

# Link test executable
$(TEST_EXEC): $(HASHMAP_O) $(TEST_O)
	$(CXX) $(CXXFLAGS) $^ -o $@

# Link example executable
$(EXAMPLE_EXEC): $(HASHMAP_O) $(EXAMPLE_O)
	$(CXX) $(CXXFLAGS) $^ -o $@

# Run tests
test: $(TEST_EXEC)
	./$(TEST_EXEC)

# Run example
example: $(EXAMPLE_EXEC)
	./$(EXAMPLE_EXEC)

# Clean build artifacts
clean:
	rm -rf build $(TEST_EXEC) $(EXAMPLE_EXEC)

# Help
help:
	@echo "Available targets:"
	@echo "  all     - Build both test and example executables"
	@echo "  test    - Build and run tests"
	@echo "  example - Build and run example"
	@echo "  clean   - Remove build artifacts"
	@echo "  help    - Show this help message"
